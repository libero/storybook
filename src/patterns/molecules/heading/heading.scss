@use "sass:list";
@use "sass:map";
@use "../../../core-styling/settings/font";
@use "../../../core-styling/settings/baseline";
@use "../../../core-styling/mixins/typography";
@use "../../../core-styling/mixins/validation";

$_h1-line-height: baseline.$unit-medium;
$_h2-line-height: baseline.$unit-small + baseline.$unit-smallish;
$_default_line-height: baseline.$unit-small;
$_font-family: font.$secondary;

@function _get-scale-point($heading-level) {
  $scale-point: (
    "level1": 7,
    "level2": 4,
    "level3": 3,
    "level4": 2,
    "level5": 1,
    "level6": 0,
  );
  @return map.get($scale-point, $heading-level)
}

@function _get-line-height($heading-level) {
  $line-height: (
    "level1": $_h1-line-height,
    "level2": $_h2-line-height,
    "level3": $_default_line-height,
    "level4": $_default_line-height,
    "level5": $_default_line-height,
    "level6": $_default_line-height,
  );
  @return map.get($line-height, $heading-level)
}

@mixin _base-typography {
  font-family: $_font-family;
  font-weight: 600;
}

@mixin _typography($heading-level) {
  $permitted: (level1, level2, level3, level4, level5, level6);
  @if not list.index($permitted, $heading-level) {
    @include validation.error("Invalid heading level supplied: #{$heading-level}");
  }

  $scale: _get-scale-point($heading-level);
  $line-height: _get-line-height($heading-level);
  @include _base-typography();
  @include typography.set-font-size-and-line-height(baseline.scale($scale), $line-height);
}

h1 {
  @include _typography(level1);
}

h2 {
  @include _typography(level2);
}

h3 {
  @include _typography(level3);
}

h4 {
  @include _typography(level4);
}

h5 {
  @include _typography(level5);
}

h6 {
  @include _typography(level6);
}


.heading__link {
  @include typography.covert-link();
}
