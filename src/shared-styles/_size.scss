@use "logical";
@use "rem";
@use "validate";

@mixin block($size) {
  @include validate.expect-single-value($size) {
    @include logical.property("", block-size, ($size));
  }
}

@mixin inline($size, $to-rem: true) {
  @include validate.expect-single-value($size) {
    @include logical.property("", inline-size, ($size), $to-rem);
  }
}

@mixin max-block-size($size) {
  @include validate.expect-single-value($size) {
    @include _constrain-block-size($size, max);
  }
}

@mixin min-block-size($size) {
  @include validate.expect-single-value($size) {
    @include _constrain-block-size($size, min);
  }
}

@mixin max-inline-size($size) {
  @include validate.expect-single-value($size) {
    @include _constrain-inline-size($size, max);
  }
}

@mixin min-inline-size($size) {
  @include validate.expect-single-value($size) {
    @include _constrain-inline-size($size, min);
  }
}

@mixin _constrain-block-size($size, $extreme) {
  @include logical.property($extreme, block-size, ($size));
}

@mixin _constrain-inline-size($size, $extreme) {
  @include logical.property($extreme, inline-size, ($size));
}
